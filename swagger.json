{
  "openapi": "3.0.0",
  "info": {
    "title": "ATARK API",
    "version": "1.0.0",
    "description": "API lab3."
  },
  "paths": {
    "/api/admin/users": {
      "get": {
        "summary": "Get all users",
        "tags": ["Admin"],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/User" }
                }
              }
            }
          }
        }
      }
    },

    "/api/admin/users/{id}": {
      "delete": {
        "summary": "Delete a user",
        "tags": ["Admin"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": { "description": "User deleted successfully" },
          "500": { "description": "Error deleting user" }
        }
      }
    },

    "/api/admin/notifications": {
      "get": {
        "summary": "Get all notifications",
        "tags": ["Admin"],
        "responses": {
          "200": {
            "description": "List of notifications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Notification" }
                }
              }
            }
          }
        }
      }
    },

    "/api/admin/notification": {
      "post": {
        "tags": ["Admin"],
        "summary": "Create a notification for user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string", "description": "ID of the user to notify" },
                  "type": {
                    "type": "string",
                    "enum": ["Reminder", "Alert", "Update"],
                    "description": "Type of notification"
                  },
                  "message": { "type": "string", "description": "Notification content" },
                  "dueDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Optional due date"
                  }
                },
                "required": ["userId", "type", "message"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Notification created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "notification": { "$ref": "#/components/schemas/Notification" }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied. Admins only."
          },
          "404": {
            "description": "User not found."
          },
          "500": {
            "description": "Failed to create notification."
          }
        }
      }
    },

    "/api/admin/notifications/{id}": {
      "delete": {
        "summary": "Delete a notification",
        "tags": ["Admin"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "Notification ID"
          }
        ],
        "responses": {
          "200": { "description": "Notification deleted successfully" },
          "500": { "description": "Error deleting notification" }
        }
      }
    },

    "/api/admin/health/data": {
      "get": {
        "summary": "Get health data by user id",
        "tags": ["Admin"],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "description": "ID пользователя",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userId": { "type": "string" },
                    "pulse": { "type": "integer" },
                    "activityLevel": { "type": "integer" },
                    "stressLevel": { "type": "integer" },
                    "sleepHours": { "type": "integer" }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add health data by user id",
        "tags": ["Admin"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string" },
                  "pulse": { "type": "integer" },
                  "activityLevel": { "type": "integer" },
                  "stressLevel": { "type": "integer" },
                  "sleepHours": { "type": "integer" }
                },
                "required": ["userId", "pulse", "activityLevel", "stressLevel", "sleepHours"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Data added successfully"
          },
          "400": {
            "description": "Data error"
          }
        }
      }
    },

    "/api/admin/health/data/average-healthData": {
      "get": {
        "summary": "Get average health data by user ID",
        "tags": ["Admin"],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "description": "ID пользователя",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messageTemp": { "type": "string" },
                    "messageHeartRate": { "type": "string" },
                    "messageSteps": { "type": "string" },
                    "userEmail": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid user ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No data found for the given user ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/admin/health/data/average-temperature": {
      "get": {
        "summary": "Get average temperature by user ID",
        "tags": ["Admin"],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "description": "ID пользователя",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid user ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No data found for the given user ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/admin/health/data/average-heart-rate": {
      "get": {
        "summary": "Get average heart rate by user ID",
        "tags": ["Admin"],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "description": "ID пользователя",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "userEmail": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid user ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No data found for the given user ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/admin/health/data/average-steps": {
      "get": {
        "summary": "Get average steps by user ID",
        "tags": ["Admin"],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "description": "ID пользователя",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "userEmail": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid user ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No data found for the given user ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/admin/refresh": {
      "get": {
        "summary": "Token update",
        "tags": ["Admin"],

        "parameters": [
          {
            "name": "refreshToken",
            "in": "body",
            "required": true,
            "schema": { "type": "string" },
            "description": "User email"
          }
        ],
        "responses": {
          "200": {
            "description": "Token updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "refreshToken": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized access" }
        }
      }
    },

    "/api/health/data": {
      "get": {
        "summary": "Get my health data",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pulse": { "type": "integer" },
                    "activityLevel": { "type": "integer" },
                    "stressLevel": { "type": "integer" },
                    "sleepHours": { "type": "integer" }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add my health data",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pulse": { "type": "integer" },
                  "activityLevel": { "type": "integer" },
                  "stressLevel": { "type": "integer" },
                  "sleepHours": { "type": "integer" }
                },
                "required": ["pulse", "activityLevel", "stressLevel", "sleepHours"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Data added successfully"
          },
          "400": {
            "description": "Data error"
          }
        }
      }
    },

    "/api/registration": {
      "post": {
        "summary": "User registration",
        "description": "Registration of a new user with email and password validation.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 32,
                    "description": "User password"
                  },
                  "role": {
                    "type": "string"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Пользователь зарегистрирован",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Пользователь успешно зарегистрирован."
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "email": { "type": "string" },
                        "role": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации данных",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Неверный email или пароль."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/login": {
      "post": {
        "summary": "User Login",
        "description": "Login using email and password.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User email"
                  },
                  "password": {
                    "type": "string",
                    "description": "User password"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The user has successfully logged in."
                    },
                    "accessToken": {
                      "type": "string",
                      "example": "access-token-example"
                    },
                    "refreshToken": {
                      "type": "string",
                      "example": "refresh-token-example"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверный логин или пароль",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Неверный email или пароль."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/logout": {
      "post": {
        "summary": "User logout",
        "responses": {
          "200": { "description": "User has logged out" }
        }
      }
    },

    "/api/activate/{link}": {
      "get": {
        "summary": "Account activation",
        "parameters": [
          {
            "name": "link",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "Activation link"
          }
        ],
        "responses": {
          "200": { "description": "Account activated" },
          "400": { "description": "Activation error" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "role": { "type": "string" }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "userId": { "type": "string" },
          "type": { "type": "string" },
          "message": { "type": "string" },
          "isRead": { "type": "boolean" },
          "createdAt": { "type": "string", "format": "date-time" },
          "dueDate": { "type": "string", "format": "date-time" }
        }
      },
      "Reminder": {
        "type": "object",
        "properties": {
          "userId": { "type": "string" },
          "message": { "type": "string" },
          "dueDate": { "type": "string", "format": "date-time" }
        }
      }
    }
  }
}
